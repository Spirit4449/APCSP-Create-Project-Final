(()=>{"use strict";document.addEventListener("DOMContentLoaded",function(){var e=document.getElementById("nameForm"),n=document.getElementById("nameInput");function t(){var e=n.value;""===e.trim()?alert("Please enter your name."):fetch("/create-name",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:e})}).then(function(n){n.ok?(function(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},o=t.days,a=void 0===o?30:o,i=t.path,c=void 0===i?"/":i,d=t.sameSite,r=void 0===d?"Lax":d,m=t.secure,u=Math.max(0,Math.floor(24*a*60*60)),l="undefined"!=typeof window&&window.location&&"https:"===window.location.protocol,s=null!=m?m:l,f="".concat(encodeURIComponent(e),"=").concat(encodeURIComponent(n),"; ")+"Max-Age=".concat(u,"; Path=").concat(c,"; SameSite=").concat(r);s&&(f+="; Secure"),document.cookie=f}("name",e),document.referrer?window.location.href=document.referrer:window.location.href="/"):document.getElementById("name-taken").style.visibility="visible"}).catch(function(e){console.error("Error:",e)})}e.addEventListener("submit",function(e){e.preventDefault(),t()}),n.addEventListener("keypress",function(e){document.getElementById("name-taken").style.visibility="hidden","Enter"===e.key&&(e.preventDefault(),t())})})})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
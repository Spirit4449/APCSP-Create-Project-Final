/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
var socket = io("/");
var character = document.getElementById("character");
var mode = document.getElementById("mode");
var map = document.getElementById("map");
var readyBtn = document.getElementById("ready");
var ready = false;
var partyId = window.location.pathname.split("/").filter(Boolean).pop();
var username = getCookie("name");
if (username) {
  socket.emit("user-joined", {
    name: username,
    partyId: partyId
  });
} else {
  window.location.href = "/welcome";
}
document.getElementById("username-text").textContent = username;
var party = document.getElementById("party");
var popup;
party.addEventListener("mouseover", function (event) {
  popup = document.createElement("div");
  popup.textContent = "".concat(window.location.href);
  popup.style.padding = "3px 10px";
  popup.style.color = "white";
  popup.style.position = "absolute";
  popup.style.borderRadius = "5px";
  popup.style.backgroundColor = "#2F2F2F";
  var partyCenterX = party.offsetLeft + party.offsetWidth / 2 - 250;
  var partyY = party.offsetTop;
  popup.style.left = partyCenterX + "px";
  popup.style.top = partyY + 40 + "px";
  document.body.appendChild(popup);
});
party.addEventListener("mouseout", function (event) {
  popup.remove();
});
party.addEventListener("click", function (event) {
  popup.textContent = "Copied!";
  popup.style.backgroundColor = "green";
  copyInvite();
  setTimeout(function () {
    popup.textContent = window.location.href;
    popup.style.backgroundColor = "#2F2F2F";
  }, 2000);
});
function copyInvite() {
  if (navigator.clipboard) {
    navigator.clipboard.writeText(window.location.href).then(function () {
      console.log("Text copied to clipboard");
    })["catch"](function (error) {
      console.error("Failed to copy text: ", error);
    });
  }
}
var yourTeam = document.getElementById("your-team");
var opTeam = document.getElementById("op-team");
function checkModeValue() {
  var peopleCount = yourTeam.children.length;
  var targetCount;
  switch (mode.value) {
    case "1":
      targetCount = 1;
      break;
    case "2":
      targetCount = 2;
      break;
    case "3":
      targetCount = 3;
      break;
    default:
      targetCount = 1;
  }

  // If the current count matches the target count, return
  if (peopleCount === targetCount) {
    return;
  }

  // If the current count is greater than the target count, remove extra cells
  if (peopleCount > targetCount) {
    for (var i = peopleCount - 1; i >= targetCount; i--) {
      yourTeam.removeChild(yourTeam.lastChild);
      opTeam.removeChild(opTeam.lastChild);
    }
  }
  count = targetCount - peopleCount;
  for (var _i = 0; _i < count; _i++) {
    createRandom(yourTeam);
    createRandom(opTeam);
  }
}
function updatePeople(name, character, ready) {
  // Select all <td> elements in the entire page
  var allTdElements = document.querySelectorAll("td");
  var conditionMet = false;
  var tempName = name;
  if (name.includes(" (You)")) {
    tempName = name.replace(" (You)", "").trim();
  }
  var _loop = function _loop() {
      var td = allTdElements[i];
      if (td.classList.contains("player-display")) {
        socket.emit("team-update", {
          tempName: tempName,
          partyId: partyId,
          team: "your-team"
        });
      } else {
        socket.emit("team-update", {
          tempName: tempName,
          partyId: partyId,
          team: "op-team"
        });
      }
      Array.from(td.children).forEach(function (element) {
        if (element.tagName === "P" && element.textContent === "Random") {
          td.id = tempName;
          td.addEventListener("dragstart", function (event) {
            event.dataTransfer.setData("text/plain", "".concat(tempName, ",").concat(character, ",").concat(ready));
          });
          element.textContent = name;
          var img = td.querySelector("img");
          if (character === "Ninja") {
            img.src = "/assets/ninjasmallicon.png";
          }
          var readyElement = td.querySelector(".status");
          readyElement.textContent = ready;
          readyElement.style.color = "";
          readyElement.style.cursor = "";

          // Set the flag to true when the condition is met
          conditionMet = true;
        }
      });

      // Check if the condition is met after each inner loop iteration
      if (conditionMet) {
        return {
          v: void 0
        }; // Exit the function early if the condition is met
      }
    },
    _ret;
  for (var i = 0; i < allTdElements.length; i++) {
    _ret = _loop();
    if (_ret) return _ret.v;
  }
}
function createRandom(team) {
  var td = document.createElement("td");
  var username = document.createElement("p");
  username.classList.add("username");
  username.textContent = "Random";
  var iconDiv = document.createElement("div");
  iconDiv.classList.add("icon");
  var iconImg = document.createElement("img");
  iconImg.src = "/assets/random.png";
  iconImg.alt = "";
  iconDiv.appendChild(iconImg);
  var statusDiv = document.createElement("div");
  statusDiv.classList.add("status");
  statusDiv.style.color = "yellow";
  statusDiv.textContent = "Invite";
  statusDiv.style.cursor = "pointer";
  statusDiv.addEventListener("click", function (event) {
    if (statusDiv.style.cursor === "pointer") {
      copyInvite();
      statusDiv.textContent = "Copied!";
      setTimeout(function () {
        statusDiv.textContent = "Invite";
      }, 1000);
    }
  });
  td.appendChild(username);
  td.appendChild(iconDiv);
  td.appendChild(statusDiv);
  td.draggable = true;
  td.addEventListener("dragenter", function (event) {
    event.preventDefault();
  });
  td.addEventListener("dragover", function (event) {
    event.preventDefault();
    td.style.border = "7px solid yellow";
  });
  td.addEventListener("dragleave", function (event) {
    event.preventDefault();
    td.style.border = "";
  });
  td.addEventListener("drop", function (event) {
    event.preventDefault();
    td.style.border = "";
    statusDiv.style.color = "";
    var data = event.dataTransfer.getData("text/plain");
    data = data.split(",");
    var owner = document.getElementById(data[0]);
    var usernameElement = owner.querySelector(".username");
    var img = owner.querySelector("img");
    var status = owner.querySelector(".status");
    if (username.textContent !== "Random") {
      usernameElement.textContent = username.textContent;
      img.src = iconImg.src;
      status.textContent = statusDiv.textContent;
      status.style.color = "";
      owner.id = username;
    } else {
      usernameElement.textContent = "Random";
      img.src = "/assets/random.png";
      status.textContent = "Invite";
      status.style.color = "yellow";
      owner.id = "";
    }
    username.textContent = "".concat(data[0], " (You)");
    if (data[1] === "Ninja") {
      iconImg.src = "/assets/ninjasmallicon.png";
    }
    statusDiv.textContent = data[2];
    td.id = data[0];
    td.addEventListener("dragstart", function (event) {
      event.dataTransfer.setData("text/plain", "".concat(data[0], ",").concat(data[1], ",").concat(data[2]));
    });
    if (team === yourTeam) {
      socket.emit("team-update", {
        tempName: data[0],
        partyId: partyId,
        team: "your-team"
      });
    } else if (team === opTeam) {
      socket.emit("team-update", {
        tempName: data[0],
        partyId: partyId,
        team: "op-team"
      });
    }
    var allTDS = document.querySelectorAll("td");
    var count = 0;
    allTDS.forEach(function (checkTd) {
      count++;
      if (td === checkTd) {
        socket.emit("drop", {
          name: data[0],
          character: data[1],
          ready: data[2],
          count: count
        });
      }
    });
  });
  if (team === yourTeam) {
    td.classList.add("player-display");
    document.getElementById("your-team").appendChild(td);
  } else if (team === opTeam) {
    td.classList.add("op-display");
    username.style.color = "#ffb496";
    document.getElementById("op-team").appendChild(td);
  }
}
character.addEventListener("change", function (event) {
  var selectedValue = event.target.value;
  socket.emit("character-change", {
    selectedValue: selectedValue,
    username: username,
    partyId: partyId
  });
});
var previousModeValue = mode.value;
mode.addEventListener("click", function (event) {
  var selectedValue = event.target.value;
  fetch("/party-members", {
    method: "POST",
    headers: {
      "Content-Type": "application/json"
    },
    body: JSON.stringify({
      partyId: partyId
    })
  }).then(function (response) {
    return response.json();
  }).then(function (data) {
    if (Number(selectedValue) * 2 < data.membersCount) {
      // Create error message
      var error = document.createElement("p");
      error.style.position = "absolute";
      error.style.top = "80%";
      error.style.left = "50%";
      error.style.transform = "translate(-50%, -50%)";
      error.style.color = "#ff5252";
      error.style.padding = "5px 10px";
      error.style.backgroundColor = "black";
      error.style.borderRadius = "6px";
      error.style.border = "2px solid white";
      error.textContent = "Too many players for this mode! Please remove 1 or more players";
      error.addEventListener("click", function (event) {
        error.remove();
      });
      setTimeout(function () {
        if (error) {
          error.remove();
        }
      }, 2000);
      document.body.appendChild(error);
      mode.value = previousModeValue;
    } else {
      socket.emit("mode-change", {
        selectedValue: selectedValue,
        username: username,
        partyId: partyId,
        members: data.members
      });
      previousModeValue = mode.value;
    }
  })["catch"](function (error) {
    console.error("Error:", error);
  });
});
map.addEventListener("change", function (event) {
  var selectedValue = event.target.value;
  socket.emit("map-change", {
    selectedValue: selectedValue,
    username: username,
    partyId: partyId
  });
});
readyBtn.addEventListener("click", function (event) {
  if (ready === false) {
    ready = true;
    readyBtn.style.backgroundColor = "green";
    readyBtn.value = "Cancel";
  } else if (ready === true) {
    ready = false;
    readyBtn.style.backgroundColor = "";
    readyBtn.value = "Ready";
  }
  socket.emit("ready", {
    username: username,
    ready: ready,
    partyId: partyId,
    mode: mode.value
  });
});
socket.on("connection", function (data) {
  var currentDomain = window.location.origin;
  data.partyMembers.forEach(function (member) {
    if (member.mode && member.map) {
      mode.value = member.mode;
      map.value = member.map;
    } else {
      var tempName = member.name;
      var _character = member.character;
      if (member.name === username) {
        tempName += " (You)";
      }
      var readyText;
      if (member.ready === true) {
        readyText = "Ready";
      } else if (member.ready === false) {
        readyText = "Not ready";
      }
      checkModeValue();
      updatePeople(tempName, _character, readyText);
    }
  });
});
socket.on("user-joined", function (data) {
  if (partyId === data.partyId) {
    updatePeople(data.name, "Ninja", "Not Ready");
  }
});
socket.on("character-change", function (data) {
  if (partyId === data.partyId) {
    var user = document.getElementById(data.username);
    var img = user.querySelector("img");
    if (data.character === "Ninja") {
      img.src = "/assets/ninjasmallicon.png";
    }
  }
});
socket.on("mode-change", function (data) {
  if (partyId === data.partyId) {
    mode.value = data.mode;
    checkModeValue();
    var members = data.members;
    for (var userKey in members) {
      if (members[userKey]["name"]) {
        var user = members[userKey];
        if (!document.getElementById(user["name"])) {
          var name = user["name"];
          if (name === username) {
            name = "".concat(user["name"], " (You)");
          }
          var readyText = void 0;
          if (user["ready"] === true) {
            readyText = "Ready";
          } else if (user["ready"] === false) {
            readyText = "Not Ready";
          }
          updatePeople(name, user["character"], readyText);
        }
      }
    }
  }
});
socket.on("map-change", function (data) {
  if (partyId === data.partyId) {
    map.value = data.map;
  }
});
socket.on("drop", function (data) {
  var allTDS = document.querySelectorAll("td");
  var count = 0;
  allTDS.forEach(function (checkTd) {
    count++;
    if (count === data.count) {
      var usernameElement = checkTd.querySelector("p");
      var imgElement = checkTd.querySelector("img");
      var statusElement = checkTd.querySelector(".status");
      var previousTd = document.getElementById(data.name);
      console.log(previousTd);
      var _username = previousTd.querySelector('p');
      var img = previousTd.querySelector('img');
      var status = previousTd.querySelector('.status');
      if (usernameElement.textContent !== 'Random') {
        _username.textContent = usernameElement.textContent;
        img.src = imgElement.src;
        status.textContent = statusElement.textContent;
        status.style.color = '';
        previousTd.id = usernameElement.textContent;
      } else {
        _username.textContent = 'Random';
        img.src = '/assets/random.png';
        status.textContent = 'Invite';
        status.style.color = 'yellow';
        previousTd.id = '';
      }
      usernameElement.textContent = data.name;
      if (data.character === "Ninja") {
        imgElement.src = "/assets/ninjasmallicon.png";
      }
      statusElement.textContent = data.ready;
      statusElement.style.color = '';
      checkTd.id = data.name;
    }
  });
});
socket.on("ready", function (data) {
  if (partyId === data.party) {
    var playerDiv = document.getElementById(data.name);
    if (playerDiv) {
      var status = playerDiv.querySelector(".status");
      if (data.ready === true) {
        status.textContent = "Ready";
        status.style.color = "#23EC63";
      } else if (data.ready === false) {
        status.textContent = "Not Ready";
        status.style.color = "";
      }
    }
  }
});
socket.on("room-deleted", function () {
  window.location = "/";
});
socket.on("matchmaking", function (data) {
  if (partyId === data.partyId) {
    sessionStorage.setItem("matchmakingMembers", data.members);
    sessionStorage.setItem("membersToFind", data.membersToFind);
    window.location.href = "/matchmaking/".concat(data.partyId);
  }
});
socket.on("user-disconnected", function (data) {
  if (data.partyId === partyId) {
    var userDivs = document.querySelectorAll(".icon");
    var userTd;
    userDivs.forEach(function (div) {
      var usernameElement = div.parentNode.querySelector(".username");
      if (usernameElement.textContent === data.name) {
        usernameElement.textContent = "Random";
        userTd = div.parentNode;
        return;
      }
    });
    if (userTd) {
      var _ready = userTd.querySelector(".status");
      _ready.textContent = "Invite";
      _ready.style.color = "yellow";
      _ready.style.cursor = "pointer";
      _ready.addEventListener("click", function (event) {
        copyInvite();
        _ready.textContent = "Copied!";
        setTimeout(function () {
          _ready.textContent = "Invite";
        }, 1000);
      });
      var img = userTd.querySelector("img");
      img.src = "/assets/random.png";
    } else {
      console.error("Could not remove user");
    }
  }
});
function getCookie(cookieName) {
  var name = cookieName + "=";
  var decodedCookie = decodeURIComponent(document.cookie);
  var cookieArray = decodedCookie.split(";");
  for (var i = 0; i < cookieArray.length; i++) {
    var cookie = cookieArray[i].trim();
    if (cookie.indexOf(name) === 0) {
      return cookie.substring(name.length);
    }
  }
  return "";
}
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
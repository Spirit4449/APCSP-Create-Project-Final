/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
/*!****************************!*\
  !*** ./src/matchmaking.js ***!
  \****************************/
// matchmaking.js

var socket = io("/");
function mmdbg(label) {
  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  try {
    console.log("[MM][".concat(new Date().toISOString(), "] ").concat(label), data);
  } catch (e) {
    console.log("[MM] ".concat(label));
  }
}
mmdbg("matchmaking page load", {
  partyId: window.location.pathname
});
var partyId = window.location.pathname.split("/").filter(Boolean).pop();
socket.on("game-started", function (data) {
  mmdbg("recv game-started", {
    partyId: data.partyId,
    foundId: data.foundId,
    gameId: data.gameId
  });
  // If either the found team or owner team
  if (partyId === data.foundId || partyId === data.partyId) {
    for (var team in data.gameData) {
      // For each team
      for (var playerKey in data.gameData[team]) {
        // For each player
        var player = data.gameData[team][playerKey];
        if (player["name"] === getCookie("name")) {
          // If name
          // Set session variables
          sessionStorage.setItem("character", player["character"]);
          sessionStorage.setItem("spawnPlatform", player["spawnPlatform"]);
          sessionStorage.setItem("spawn", player["spawn"]);
          sessionStorage.setItem("party", data.foundId);
          sessionStorage.setItem("partyMembers", data.partyMembers);
          sessionStorage.setItem("map", data.map);
        }
      }
    }
    var membersToFind = sessionStorage.getItem("membersToFind");
    var playersFound = document.getElementById("players-found");
    // Set textcontent of matchmaking players
    playersFound.textContent = "Players Found: ".concat(membersToFind, "/").concat(membersToFind);
    setTimeout(function () {
      window.location = "/game/".concat(data.gameId);
      mmdbg("navigate game", {
        gameId: data.gameId
      });
    }, 500);
  }
});

// If a player leaves, redirects back to party
socket.on("matchmaking-disconnect", function (data) {
  console.log("Got the disconnect message");
  mmdbg("recv matchmaking-disconnect", data);
  if (partyId === data.partyId) {
    window.location.href = "/party/".concat(partyId);
  }
});
function getCookie(cookieName) {
  var name = cookieName + "=";
  var decodedCookie = decodeURIComponent(document.cookie);
  var cookieArray = decodedCookie.split(";");
  for (var i = 0; i < cookieArray.length; i++) {
    var cookie = cookieArray[i].trim();
    if (cookie.indexOf(name) === 0) {
      return cookie.substring(name.length);
    }
  }
  return "";
}

// Random color function to change color of background periodicaly
function getRandomColor() {
  var letters = "0123456789ABCDEF";
  var color = "#";
  for (var i = 0; i < 6; i++) {
    // Chooses a random 6 digit string
    color += letters[Math.floor(Math.random() * 16)];
  }
  return color;
}

// Function to set a random color as background
function changeBackgroundColor() {
  var background = document.querySelector(".background"); // Gets background object
  var color = getRandomColor(); // Calls random color funciton
  background.style.backgroundColor = color; // Sets background color
}
document.addEventListener("DOMContentLoaded", function () {
  setInterval(changeBackgroundColor, 5000); // Every 5 seconds background color is changed
  changeBackgroundColor();
  var leave = document.getElementById("leave");
  leave.addEventListener("click", function (event) {
    window.history.back();
  });

  // Changes text of finding players header
  var findingPlayers = document.getElementById("finding-players");
  setInterval(function () {
    findingPlayers.textContent = changeText();
  }, 1000);
  function changeText() {
    dots = [".", "..", "..."];
    var randomIndex = Math.floor(Math.random() * dots.length); // Randomly selects a dot amount from the list
    var item = dots[randomIndex];
    var text = "Finding Players ".concat(item);
    return text;
  }
  var playersFound = document.getElementById("players-found");
  var members = sessionStorage.getItem("matchmakingMembers");
  var membersToFind = sessionStorage.getItem("membersToFind");
  playersFound.textContent = "Players Found: ".concat(members, "/").concat(membersToFind);
});
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,